				if (j == 0 and i+1 != instrucoes.size() and instrucoes[i].getDestino() != instrucoes[i+1].getFonte1() and instrucoes[i].getDestino() != instrucoes[i+1].getFonte2()) {
									std::cout << instrucoes[i].getDestino();
				std::cout << instrucoes[i+1].getDestino();

					listaInstrucoes[0] = listaInstrucoes[1];
					listaInstrucoes[1] = listaInstrucoes[2];
					listaInstrucoes[2] = listaInstrucoes[3];
					listaInstrucoes[3] = listaInstrucoes[4];
					listaInstrucoes[4] = instrucoes[i+1];
					std::cout << "WtF";
				} 

				else if (j == 2 and i+1 != instrucoes.size() and (instrucoes[i].getDestino() == instrucoes[i+1].getFonte1() or instrucoes[i].getDestino() == instrucoes[i+1].getFonte2())) {
					listaInstrucoes[0] = listaInstrucoes[1];
					listaInstrucoes[1] = listaInstrucoes[2];
					listaInstrucoes[2] = listaInstrucoes[3];
					listaInstrucoes[3] = listaInstrucoes[4];
					listaInstrucoes[4] = instrucoes[i+1];
					std::cout << "WtddddddddF";
				}			

void Pipeline::gerarPipeline() {
	Instrucao inst;
	std::vector<Instrucao>::iterator it;
	it = listaInstrucoes.begin();
	std::cout << "Temos " << instrucoes.size() << " funÃ§Ãµes.\n";


	for(unsigned int i = 0; i < 5; i++) {
		listaInstrucoes.emplace_back(inst);
		it++;
	}

	unsigned int counter = 0;
	for(unsigned int i = 0; i < instrucoes.size(); i++) {
		for(unsigned int j = 0; j < 5; j++) {
			if (i == 0 and j == 0) listaInstrucoes[5] = instrucoes[0];
			if (j == 0 and i+1 != instrucoes.size() and instrucoes[i].getDestino() != instrucoes[i+1].getFonte1() and instrucoes[i].getDestino() != instrucoes[i+1].getFonte2()) {
				listaInstrucoes[5] = instrucoes[i+1];
			}
			else if (j == 4 and i+1 != instrucoes.size() and (instrucoes[i].getDestino() == instrucoes[i+1].getFonte1() or instrucoes[i].getDestino() == instrucoes[i+1].getFonte2())) {
				//listaInstrucoes[5] = inst;
				listaInstrucoes[5] = instrucoes[i+1];
			}
			
			listaInstrucoes[0] = listaInstrucoes[1];
			listaInstrucoes[1] = listaInstrucoes[2];
			listaInstrucoes[2] = listaInstrucoes[3];
			listaInstrucoes[3] = listaInstrucoes[4];
			listaInstrucoes[4] = listaInstrucoes[5];
			listaInstrucoes[5] = inst;

			std::cout << "\nCiclo " << ++counter;
			std::cout << "\nBI:	" << listaInstrucoes[4].getLinhaCompleta();
			std::cout << "\nDI:	" << listaInstrucoes[3].getLinhaCompleta();
			std::cout << "\nEX:	" << listaInstrucoes[2].getLinhaCompleta();
			std::cout << "\nMEM:	" << listaInstrucoes[1].getLinhaCompleta();
			std::cout << "\nWB:	" << listaInstrucoes[0].getLinhaCompleta() << "\n";
		}
	}

	for(unsigned int j = 0; j < 6; j++){
		if (listaInstrucoes[5].getLinhaCompleta() == "null" and 
			listaInstrucoes[4].getLinhaCompleta() == "null" and 
			listaInstrucoes[3].getLinhaCompleta() == "null" and
			listaInstrucoes[2].getLinhaCompleta() == "null" and
			listaInstrucoes[1].getLinhaCompleta() == "null" and
			listaInstrucoes[0].getLinhaCompleta() == "null") break;

			std::cout << "\nCiclo " << ++counter;
			std::cout << "\nBI:	" << listaInstrucoes[4].getLinhaCompleta();
			std::cout << "\nDI:	" << listaInstrucoes[3].getLinhaCompleta();
			std::cout << "\nEX:	" << listaInstrucoes[2].getLinhaCompleta();
			std::cout << "\nMEM:	" << listaInstrucoes[1].getLinhaCompleta();
			std::cout << "\nWB:	" << listaInstrucoes[0].getLinhaCompleta() << "\n";

			listaInstrucoes[0] = listaInstrucoes[1];
			listaInstrucoes[1] = listaInstrucoes[2];
			listaInstrucoes[2] = listaInstrucoes[3];
			listaInstrucoes[3] = listaInstrucoes[4];
			listaInstrucoes[4] = listaInstrucoes[5];
			listaInstrucoes[5] = inst;
	}
}